# 1 "lexer.mll"
 
open Parser

# 6 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\238\255\069\000\001\000\001\000\001\000\000\000\000\000\
    \243\255\002\000\002\000\244\255\001\000\001\000\003\000\002\000\
    \002\000\006\000\017\000\248\255\249\255\250\255\251\255\252\255\
    \253\255\254\255\002\000\000\000\247\255\000\000\013\000\246\255\
    \002\000\001\000\006\000\245\255\001\000\001\000\014\000\002\000\
    \242\255\002\000\002\000\000\000\017\000\003\000\241\255\000\000\
    \005\000\003\000\240\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\016\000\017\000\017\000\017\000\017\000\017\000\
    \255\255\017\000\017\000\255\255\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\026\000\026\000\026\000\026\000\026\000\000\000\026\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \026\000\000\000\026\000\000\000\000\000\000\000\011\000\000\000\
    \025\000\024\000\022\000\023\000\000\000\020\000\000\000\021\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\000\000\003\000\050\000\008\000\019\000\000\000\
    \000\000\009\000\047\000\000\000\028\000\011\000\004\000\040\000\
    \046\000\000\000\000\000\000\000\048\000\017\000\015\000\012\000\
    \037\000\032\000\041\000\035\000\006\000\029\000\031\000\042\000\
    \049\000\000\000\000\000\000\000\014\000\034\000\000\000\000\000\
    \000\000\010\000\043\000\000\000\028\000\011\000\005\000\040\000\
    \046\000\000\000\000\000\000\000\044\000\018\000\016\000\013\000\
    \036\000\030\000\038\000\035\000\007\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\033\000\
    \027\000\031\000\035\000\039\000\045\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\026\000\026\000\000\000\255\255\026\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\026\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\003\000\000\000\000\000\255\255\
    \255\255\000\000\004\000\255\255\029\000\037\000\000\000\042\000\
    \049\000\255\255\255\255\255\255\047\000\000\000\000\000\000\000\
    \009\000\015\000\006\000\012\000\000\000\017\000\032\000\041\000\
    \048\000\255\255\255\255\255\255\000\000\033\000\255\255\255\255\
    \255\255\000\000\005\000\255\255\027\000\036\000\000\000\039\000\
    \045\000\255\255\255\255\255\255\043\000\000\000\000\000\000\000\
    \010\000\016\000\007\000\013\000\000\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\014\000\
    \018\000\030\000\034\000\038\000\044\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 13 "lexer.mll"
    (token lexbuf)
# 137 "lexer.ml"

  | 1 ->
# 15 "lexer.mll"
    (LPAREN)
# 142 "lexer.ml"

  | 2 ->
# 17 "lexer.mll"
    (RPAREN)
# 147 "lexer.ml"

  | 3 ->
# 19 "lexer.mll"
    (PLUS)
# 152 "lexer.ml"

  | 4 ->
# 21 "lexer.mll"
    (TIMES)
# 157 "lexer.ml"

  | 5 ->
# 23 "lexer.mll"
    (DIVIDE)
# 162 "lexer.ml"

  | 6 ->
# 25 "lexer.mll"
    (MINUS)
# 167 "lexer.ml"

  | 7 ->
# 27 "lexer.mll"
    (GREATER)
# 172 "lexer.ml"

  | 8 ->
# 29 "lexer.mll"
    (MOD)
# 177 "lexer.ml"

  | 9 ->
# 31 "lexer.mll"
    (NOT)
# 182 "lexer.ml"

  | 10 ->
# 33 "lexer.mll"
    (OR)
# 187 "lexer.ml"

  | 11 ->
# 35 "lexer.mll"
    (AND)
# 192 "lexer.ml"

  | 12 ->
# 37 "lexer.mll"
    (EQUAL)
# 197 "lexer.ml"

  | 13 ->
# 39 "lexer.mll"
    (BOOL(true))
# 202 "lexer.ml"

  | 14 ->
# 41 "lexer.mll"
    (BOOL(false))
# 207 "lexer.ml"

  | 15 ->
# 43 "lexer.mll"
    (EOI)
# 212 "lexer.ml"

  | 16 ->
# 45 "lexer.mll"
    (NUMBER(int_of_string (Lexing.lexeme lexbuf)))
# 217 "lexer.ml"

  | 17 ->
# 47 "lexer.mll"
    (failwith ("unknown token: " ^ Lexing.lexeme lexbuf))
# 222 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

